Backend o Frontend esa es la cuestion?

1.Que es la programación?:

*La programación informática es el arte del proceso por el cual se limpia,codifica,traza y protege el código fuente de programas computacionales,en palabras basicas,es indicarle a la computadora  lo que tiene que hacer
2.Qué es el desarrollo web?:

*El desarrollo web es el proceso de creación y mantenimiento de sitios web. Puede implicar una amplia gama de acciones, desde la codificación y el diseño hasta la gestión de contenidos y la administración del servidor web.

Asimismo, el desarrollo web consiste en utilizar lenguajes de programación como: HTML/CSS, PHP, JavaScript, y muchos otros, todo con el fin de escribir programas que harán que tu sitio sea práctico, dinámico y ágil. Además, la codificación forma parte de la vida diaria de un desarrollador. También, el papel del desarrollador como diseñador lo convierte en una pieza esencial en el futuro del óptimo desarrollo web.

3. ¿Qué debe aprender un programador?

*Conocer varios lenguajes de programación,Del mismo modo que hablar varios idiomas te da una visión mucho más amplia de una cultura, y te prepara las conexiones neuronales para uno nuevo, con los lenguajes sucede lo mismo. Y eso no significa comprender varios lenguajes que te permitan salir del paso, sino dominarlos de tal manera que puedas desenvolverte con holgura en casi todas las situaciones.

4. ¿Qué trabajos realiza un programador?

*Escribir y probar código para nuevos programas,Actualizar programas,Identificar y corregir errores de código,Reescribir programas para diferentes sistemas operativos,Proteger los programas de ciberamenazas

5. ¿Qué es una roadmap en desarrollo?

*El Roadmap, conocido en español como hoja de ruta, funciona como un cronograma para la planificación del proyecto. Se trata de un verdadero manifiesto ágil, un documento directivo que enumera la lista de tareas a ejecutar en el marco del proyecto según un principio de iteración e integración continua. La hoja de ruta del proyecto ofrece una definición y una proyección realista, lógica y estructurada de las principales etapas de un proyecto, la evolución y el ciclo de vida dentro de la empresa.

6. ¿Qué debe aprender un desarrollador web?

*Aprender HTML
*Aprender CSS
*Aprender JavaScript
*Aprende bases de datos y SQL
*Aprende un lenguaje de back-end(PHP, NodeJS)
*Dar el salto profesional aprendiendo: Symfony, Angular, NodeJS, Bootstrap, Less
*Tener ganas, paciencia, constancia y pasión

7. ¿Qué trabajos realiza un desarrollador web?

*Para un desarrollador web, su objetivo principal es el de crear sitios web dinámicos, funcionales y efectivos para el panorama digital en la actualidad.  Debe cumplir con las necesidades del cliente y satisfacer la demanda de un usuario cada vez más inmerso en conocimientos de tecnología. 

Un desarrollador web a menudo trabaja de manera freelance, lo que significa que no está atado a ninguna compañía y es contratado por personas independientes para proyectos, de esta manera está en la potestad de manejar las horas del día que le dedica a la escritura de código y al desarrollo de la página o aplicación, comenzando y terminando cuando le parezca.

También, un desarrollador web puede trabajar a tiempo completo para una empresa, aquí le tocará trabajar en equipo interactuando de manera regular con otros desarrolladores, diseñadores web, profesionales de tecnología y otros profesionales como administradores, comunicadores sociales y el departamento de recursos humanos.

8. ¿Qué es FRONTEND?

*Frontend es la parte de un programa o dispositivo a la que un usuario puede acceder directamente. Son todas las tecnologías de diseño y desarrollo web que corren en el navegador y que se encargan de la interactividad con los usuarios.
Los desarrolladores frontend son aquellos que crean los componentes visuales de un sitio web. Dan formato a las imágenes, la animación y la interactividad de un sitio web.

9. ¿Qué es BACKEND

*Backend es la capa de acceso a datos de un software o cualquier dispositivo, que no es directamente accesible por los usuarios. Además, contiene la lógica de la aplicación que maneja dichos datos. El Backend también accede al servidor, que es una aplicación especializada que entiende la forma en la que el navegador hace solicitudes.

Los desarrolladores backend se encargan de hacer que la lógica del sitio funcione correctamente, la información se transmita de manera segura y el desempeño de la aplicación no entorpezca la experiencia del usuario.

10.¿Qué es el nivel Junior en desarrollo?

*Suele considerarse programador junior a aquellos programadores que, en líneas generales, cuenta con estas características:

    Experiencia laboral: de 0 a 3 años de experiencia real en proyectos (no cuentan los trabajos que no estén relacionados con el puesto ni aquellos proyectos desarrollados como tareas de formación durante la vida académica).
    Conocimientos técnicos: suele requerir acompañamiento o supervisión de un senior. Estos conocimientos se refieren a herramientas, lenguajes de programación, arquitecturas etc. El junior tiene más posibilidades de cometer errores.
    Conocimientos básicos: aquellos que se refieren a los procesos, las metodologías, los estándares etc. También requiere supervisión en estas labores, ya que cada compañía cuenta con sus propios procesos o estándares.
    Proactividad: al empezar en nuevo trabajo, todos necesitamos orientación a la hora de determinar el proyecto y su desarrollo. Un junior, al acabar la tarea, no sabe tomar la iniciativa y continuar con otra sin preguntar a su supervisor.

Otras características que pueden definir este puesto son la productividad media o baja, la falta de iniciativa e innovación, la dificultad para cumplir con las fechas de entrega, la dificultad para trabajar bajo presión, complicaciones para trabajar en equipo de manera integrada etc.

11.¿Qué es el nivel Senior en desarrollo?

*La categoría profesional más alta de un programador sería la de Senior, sin embargo, como ya indicamos, esto es muy relativo y puede variar según las circunstancias. Existe la creencia general de que un programador nunca deja de ser junior: hasta los Senior deben continuar formándose constantemente.
Pero, en general, un Senior cuenta con estas características:

Experiencia laboral: más de 6 años de experiencia.

Conocimientos técnicos: es un especialista con grandes conocimientos que no suele cometer fallos.

Conocimientos básicos: conoce a la perfección los procesos y estándares, los cumple y ayuda a los demás a aprenderlos.

Proactividad: busca y crea sus propias tareas sin necesidad de que se las asignen.No necesita supervisión.

Cumple con las fechas siempre.

Trabaja bien bajo presión, se compromete con nuevos retos.

Participa en decisiones de alto nivel.

12.¿Qué es el lenguaje HTML?

*El lenguaje de marcado de hipertexto (HTML) es un lenguaje informático que forma parte de la mayoría de las páginas web y aplicaciones en línea. Un hipertexto es un texto que se utiliza para enlazar con otros textos, mientras que un lenguaje de marcado es una serie de marcas que indican a los servidores web la estructura y el estilo de un documento.

13.¿Qué es el lenguaje CSS?

*CSS son las siglas en inglés para «hojas de estilo en cascada» (Cascading Style Sheets). Básicamente, es un lenguaje que maneja el diseño y presentación de las páginas web, es decir, cómo lucen cuando un usuario las visita. Funciona junto con el lenguaje HTML que se encarga del contenido básico de las páginas.

Se les denomina hojas de estilo «en cascada» porque puedes tener varias hojas y una de ellas con las propiedades heredadas (o «en cascada») de otras.

Para muchas personas una simple plantilla de blog es suficiente. Aun así, cuando quieras personalizar la apariencia de un sitio necesitarás implementar CSS que, en conjunto con un buen CMS, te ayudará a potenciar el alcance de tu contenido.

14.¿Qué es SASS?

*SASS es uno de los preprocesadores CSS más conocidos actualmente. Cuenta con múltiples funcionalidades como mixins, variables, funciones, herencia, testing.Hoy en día, el uso de un preprocesador CSS es indispensable para cualquier desarrollo web, por la facilidad y versatilidad que nos ofrece a los desarrolladores, convirtiendo CSS en un lenguaje más dinámico.

15.¿Qué es BEM?

*El propósito de BEM que en español seria modificador de bloques de elementos, es que tú puedas crear una estructura de codigo más consistente, no duplicar estilos y traer claridad al codigo definiendo y estableciendo mejor jerarquía en tu proyecto

16.¿Qué es el lenguaje JavaScript?

*JavaScript es un lenguaje de programación dinámico que tiene la capacidad de ser utilizado en muchos dispositivos diferentes. Puede usarse en ordenadores personales, servidores web y teléfonos inteligentes. Es un lenguaje interpretado, orientado a objetos, débilmente tipado y dinámico.

Esta aplicación se emplea comúnmente para el desarrollo web front-end y más recientemente para algunos desarrollos back-end a través de frameworks como Node.Js. o Next.Js. Tiene características como la programación orientada a objetos, funciones y herencia basada en prototipos.

17.¿Qué es el lenguaje TypeScript?

*TypeScript se define como una especie de superset de JavaScript, cuyo resultado final es un código de JavaScript.es un lenguaje orientado a objetos (como el lenguaje R, por ejemplo). Esto quiere decir que tanto el cliente como el servidor tienen acceso a la escritura de código. Además, se trata de un código abierto.

Por otro lado, destaca por ser multiplataforma y, por consiguiente, ser portátil. Es decir, se puede emplear desde cualquier dispositivo, sistema operativo o navegador. Del mismo modo que JavaScript, no requiere de ninguna máquina específica.

18.¿Qué es el lenguaje Python?

*se define como un “lenguaje de programación versátil, multiplataforma y multiparadigma que se destaca por su código legible y limpio”. Cuenta con una licencia de código abierto que permite su utilización en distintos contextos de forma gratuita. A su vez, se emplea en plataformas de alto tráfico como Google, YouTube o Facebook. Python atrae por su sencillez y exactitud en la sintaxis, ya que se trata de un lenguaje como cualquier otro, pero a nivel informático.
 
Su principal objetivo es la automatización de procesos, lo que hará de las tareas algo mucho más simple. En este sentido, Python crea un código con gran legibilidad, que ahorra tiempo y recursos. Uno de sus puntos fuertes es que “comprueba los errores sobre la marcha” para solucionarlos cuando afectan a la memoria, lo que mantiene la integridad de la matriz y evita las complicaciones a la hora de escribir el código.

19.¿Qué es el lenguaje PHP?

*HP es un lenguaje de programación destinado a desarrollar aplicaciones para la web y crear páginas web, favoreciendo la conexión entre los servidores y la interfaz de usuario.Entre los factores que hicieron que PHP se volviera tan popular, se destaca el hecho de que es de código abierto.Esto significa que cualquiera puede hacer cambios en su estructura. En la práctica, esto representa dos cosas importantes:

es de código abierto, no hay restricciones de uso vinculadas a los derechos. El usuario puede usar PHP para programar en cualquier proyecto y comercializarlo sin problemas.

20.¿Qué es el lenguaje Mysql?

*MySQL es un sistema de gestión de bases de datos relacionales (RDBMS) de código abierto respaldado por Oracle y basado en el lenguaje de consulta estructurado (SQL). MySQL funciona prácticamente en todas las plataformas, incluyendo Linux, UNIX y Windows. Aunque puede utilizarse en una amplia gama de aplicaciones, MySQL se asocia más a menudo con las aplicaciones web y la publicación en línea.se basa en un modelo cliente-servidor. El núcleo de MySQL es el servidor MySQL, que maneja todas las instrucciones (o comandos) de la base de datos. El servidor MySQL está disponible como un programa independiente para su uso en un entorno de red cliente-servidor y como una biblioteca que puede ser incrustada (o enlazada) en aplicaciones independientes.

21.¿Qué es una Base de Datos?

*Una base de datos es un grupo de información que se almacena dentro de un programa de manera estratégica, y con una estructura determinada, que contiene rutinas optimizadas para guardar, eliminar, consultar y gestionar datos masivamente.

Este tipo de herramienta surgió gracias a la necesidad de preservar información contra el tiempo y el deterioro para acudir a ella posteriormente y transformarla en algo más valioso.

22.¿Qué es NoSQL?

*Las bases de datos NoSQL están diseñadas específicamente para modelos de datos específicos y tienen esquemas flexibles para crear aplicaciones modernas. Las bases de datos NoSQL son ampliamente reconocidas porque son fáciles de desarrollar, por su funcionalidad y el rendimiento a escala. Esta página incluye recursos que lo ayudan a comprender mejor las bases de datos NoSQL y comenzar a usarlas.

23.¿Qué es el lenguaje JAVA?

*Java es un lenguaje de programación de propósito general, concurrente, orientado a objetos que fue diseñado específicamente para tener tan pocas dependencias de implementación como fuera posible. Su intención es permitir que los desarrolladores de aplicaciones escriban el programa una vez y lo ejecuten en cualquier dispositivo (conocido en inglés como WORA, o "write once, run anywhere"), lo que quiere decir que el código que es ejecutado en una plataforma no tiene que ser recompilado para correr en otra.

24.¿Qué es un framework?

*el framework para desarrollo web es un esquema conceptual con módulos de software específicos, el cual pasa a ser tomado como base para el desarrollo de diferentes proyectos informáticos.permite crear y diseñar las aplicaciones, plataformas o softwares que necesitan códigos libres de errores y estructuras que cumplan con los objetivos definidos. Más aún, hace posible que los costos se reduzcan, no solo por disminuir considerablemente las pruebas y los errores en cada uno de los programas, sino también, por simplificar los procesos y evitar que se esté expuesto a tantas horas de trabajo.

25.¿Qué es una librería?

*En este sentido, una librería es un conjunto de archivos que se utiliza para desarrollar software. Suele estar compuesta de código y datos, y su fin es ser utilizada por otros programas de forma totalmente autónoma. Simple y llanamente, es un archivo importable.  

26.¿Qué es BootStrap?

*se trata de un framework de CSS utilizado en aplicaciones front-end. Es decir, una biblioteca de estilos genéricos utilizada para diseñar la pantalla de interfaz con el usuario.  

Bootstrap cuenta con múltiples recursos para configurar los distintos elementos de cada página de una manera simple y eficiente. Además, facilita la construcción de aplicaciones para todo tipo de soportes, ya que sus páginas están adaptadas tanto para la web como para dispositivos móviles. 

27.¿Qué es Tailwind?

*Tailwind, en pocas palabras, es un framework CSS que da prioridad a la utilidad sobre el propio estilo, pero además a diferencia de otros frameworks CSS como Bootstrap o Bulma, Tailwind no provee una serie de componentes predefinidos. En su lugar, este framework opera en un nivel inferior y te proporciona un conjunto de clases de ayuda para estructura y estilado, de forma que, usando dichas clases, puedas crear rápidamente diseños personalizados con facilidad. Además, no es opinionado y gracias a su flexibilidad te permite crear un diseño realmente único.

28.¿Qué es Laravel?

*aravel es un framework de PHP para ayudarnos en un tipo de desarrollo sobre aplicaciones escritas en este lenguaje de programación. Esté framework nos ayuda en muchas cosas al desarrollar una aplicación, por medio de sus sistema de paquetes y de ser un framework del tipo MVC (Modelo-Vista-Controlador) da como resultado que podamos “despreocuparnos” (por así decirlo) en ciertas aspecto del desarrollo, cómo instanciar clases y métodos para usarlos en muchas partes de nuestra aplicación sin la necesidad de escribirlo y repetirlos muchas veces con lo que eso conlleva a la hora de modificar algo en el código.

29.¿Qué es NodeJS?

*Node.js es un entorno de ejecución de un solo hilo, de código abierto y multiplataforma para crear aplicaciones de red y del lado del servidor rápidas y escalables. Se ejecuta en el motor de ejecución de JavaScript V8, y utiliza una arquitectura de E/S basada en eventos y sin bloqueos, lo que la hace eficiente y adecuada para aplicaciones en tiempo real.

30.¿Qué es VUE.JS

*Vue.js (también llamado Vue o VueJS) es un framework progresivo Javascript para crear interfaces de usuario, o en otras palabras, se trata de una «capa» añadida a Javascript formada por herramientas, convenciones de trabajo y un lenguaje particular que nos permite crear aplicaciones de forma rápida, agradable, sencilla y muy práctica.

31.¿Qué es REACT?

*es una biblioteca de javascript que se utiliza para construir interfaces de usuario. Toda aplicación web React se compone de componentes reutilizables que conforman partes de la interfaz de usuario — podemos tener un componente distinto para nuestra barra de navegación, otro para el pie de página, otro para el contenido principal, etc. 

32.¿Qué es ANGULAR?

*Angular es uno de los framework de desarrollo JavaScript más potentes y populares en la actualidad. Aunque estoy seguro que si eres desarrollador web ya habrás trabajado con él en algún proyecto o estás muy cerca de hacerlo. La razón es porque Angular responde a resolver los problemas a todos aquellos desarrolladores que quieran un desarrollo que consolide JavaScript, HTML y CSS con comodidad permitiendo ensamblar aplicaciones de una forma intuitiva en una sola página (SPA) como ninguna otra.

33.¿Qué es una API?

*Una API o interfaz de programación de aplicaciones es un conjunto de definiciones y protocolos que se usa para diseñar e integrar el software de las aplicaciones.Las API permiten que sus productos y servicios se comuniquen con otros, sin necesidad de saber cómo están implementados. Esto simplifica el desarrollo de las aplicaciones y permite ahorrar tiempo y dinero. Las API le otorgan flexibilidad; simplifican el diseño, la administración y el uso de las aplicaciones; y ofrecen oportunidades de innovación, lo cual es ideal al momento de diseñar herramientas y productos nuevos (o de gestionar los actuales).

34.¿Cuánto tiempo tarda una persona en aprender un lenguaje de
programación?

*Algunas personas aprenden más rápido y otras simplemente usan mejores recursos que aceleran su proceso de aprendizaje, como los cursos de programación o tutoriales de expertos en YouTube. En ocasiones, tú eres el único responsable de cuánto se tarda en aprender un lenguaje de programación. Cuanto más tiempo dediques, más rápido comprenderás las reglas y procedimientos esenciales que tienes que conocer.

35.¿Qué es un STACK en desarrollo?

*Un stack tecnológico es un conjunto de servicios de software que se utilizan para el desarrollo de aplicaciones. Normalmente, un Stack está formada por lenguajes de programación, Frameworks, bibliotecas, herramientas de desarrollo y enfoques de programación.

Un stack tecnológico determina el tipo de aplicaciones que puede construir, el nivel de personalizaciones que puede realizar y los recursos que necesita para desarrollar su aplicación.

36.¿Qué es un desarrollador FULLSTACK?

*Un desarrollador full-stack es un profesional versátil capaz de desenvolverse en un desarrollo web tanto en la parte del cliente (front-end) como del servidor (back-end). Es un perfil muy completo, con amplios conocimientos y herramientas que le permiten afrontar cualquier fase en la construcción de un software.

Es capaz de entender las dos partes de la programación y disponer de capacidad para comunicarse de forma efectiva con el resto del equipo

37.¿Qué es un paradigma de programación?

*Un paradigma de programación es una manera o estilo de programación de software. Existen diferentes formas de diseñar un lenguaje de programación y varios modos de trabajar para obtener los resultados que necesitan los programadores.  Se trata de un conjunto de métodos sistemáticos aplicables en todos los niveles del diseño de programas para resolver problemas computacionales.

Los lenguajes de programación adoptan uno o varios paradigmas en función del tipo de órdenes que permiten implementar como, por ejemplo, Python o JavaScript, que son multiparadigmas.

38.¿Cuáles son los lenguajes de programación más demandados en el
mercado Colombiano?

* Python.
*Java.
*C.
*C++.
*JavaScript.

39.¿Cuáles son los lenguajes de programación más demandados en el
mercado Internacional?

*python
*javascript
*c
*java
*c++
*c#
*visual basic
*SQL
*swift

40.¿Cuánto puede ganar un desarrollador FrontEnd?

*El salario desarrollador front end promedio en Colombia es de $48.000.000 al año o $21.978 por hora. Los cargos de nivel inicial comienzan con un ingreso de $27.000.006 al año, mientras que profesionales más experimentados perciben hasta $68.160.000 al año. 

41.¿Cuánto puede ganar un desarrollador BackEnd?

* Por ejemplo, un desarrollador .Net con 2 a 5 años de experiencia puede ganar un salario bruto mínimo de 5 millones de pesos, mientras que una persona con 8 a 12 años de experiencia en el mismo cargo puede aspirar un salario entre los 12 y 18 millones de pesos.

42.¿Cuáles son los requisitos para ser desarrollador FrontEnd?

*Todos los desarrolladores frontend deben tener conocimientos de HTML, CSS y JavaScript. Esos tres lenguajes son la base de casi todo lo que harás. También necesitarás otras habilidades, pero el mismo conjunto de habilidades requerido variará de un trabajo a otro.

43.¿Cuáles son los requisitos para ser desarrollador BackEnd?

*Un profesional Back End debe tener conocimientos en lenguajes de programación tales como JavaScript / TypeScript, Java, C#, PHP, Node. js, Python y Ruby. Además, el Back End Developer se encarga de la implementación en gestores de bases de datos, por lo que deberá dominar MySQL, Postgres, SQL Server y MongoDB.

44.¿Qué es el control de versiones?

*El control de versiones, también conocido como "control de código fuente", es la práctica de rastrear y gestionar los cambios en el código de software. Los sistemas de control de versiones son herramientas de software que ayudan a los equipos de software a gestionar los cambios en el código fuente a lo largo del tiempo. A medida que los entornos de desarrollo se aceleran, los sistemas de control de versiones ayudan a los equipos de software a trabajar de forma más rápida e inteligente.

45.¿Qué es GIT?

*Git es un sistema de control de versiones que nos permite llevar un histórico sobre los cambios de nuestro proyecto, no es el único sistema de control de versiones, pero sí el más usado. Fue creado por Linus Torvalds. Git y GitHub no son lo mismo, uno es el sistema de control de versiones y el otro es la red social de programadores.

Los repositorios son una estructura de datos que almacenan información sobre archivos y directorios. Es el inicio de todo proyecto con Git, dentro de un repositorio encontraremos ramas, no son más que la duplicación de un objeto bajo un repositorio, permite trabajar en paralelo para al final unir los cambios.

46.¿Qué es GITHUB?

*GitHub es una plataforma para que los desarrolladores puedan crear, distribuir y mantener el software que han desarrollado. Una de las ventajas que ofrece esta plataforma es la colaboración que existe entre los usuarios, ya que pueden modificar el código para mejorarlo o agregar nuevas funciones.

47.¿Qué es una rama de desarrollo?

*Una rama es un entorno de desarrollo independiente donde se genera un nuevo área de trabajo, la cual cuenta con su propia área de preparación y sus propios commits. El objetivo de trabajar con ramas es poder agregar nuevas funcionalidades o realizar pruebas sin afectar al entorno original.

48.¿Cuáles son las ramas del desarrollo?

*Programación Front-End
*Programación Back-End
*Programación de Aprendizaje Automático (Machine Learning)
*Programación de Videojuegos
*Programación Desktop
*Programación de Sistemas Operativos

49.¿Qué es NPM?

*npm es el Node Package Manager que viene incluido y ayuda a cada desarrollo asociado a Node. Durante años, Node ha sido ampliamente utilizado por los desarrolladores de JavaScript para compartir herramientas, instalar varios módulos y administrar sus dependencias. Es por eso que es fundamental que las personas que trabajan con Node.js entiendan qué es npm.

50.¿Qué es Webpack?

*Webpack es un empaquetador de módulos para aplicaciones modernas en JavaScript. Qué significa esto ?, bueno, muchas cosas. En síntesis webpack convierte módulos con dependencias en archivos que pueda entender el navegador de una manera más rápida e interoperable

51.¿Qué es Prettiers?

*Prettier es un formateador automático de código.Prettier ofrece soporte para múltiples lenguajes y frameworks como por ejeplo:
Javascript
JSX
Angular
Vue
Typescript
CSS
HTML
JSON
Graphql
Markdown
YAML

52.¿Qué es EsLint?

*ESLINT es un linter para JavaScript. Un Linter no es más que una herramienta que nos ayuda a cumplir las buenas prácticas de codificación y de estilos en un lenguaje de programación. ESLINT, es uno de los linters más populares para JavaScript.

53.¿Qué es MVC?

*es un patrón de diseño de software comúnmente utilizado para el desarrollo de interfaces de usuario que dividen la lógica del programa relacionado en tres elementos interconectados. … Tradicionalmente utilizado para interfaces gráficas de usuario de escritorio (GUI), este patrón se hizo popular para el diseño de aplicaciones web.

54.¿Qué es la metodología SCRUM?

*Scrum es un proceso de gestión que reduce la complejidad en el desarrollo de productos para satisfacer las necesidades de los clientes. La gerencia y los equipos de Scrum trabajan juntos alrededor de requisitos y tecnologías para entregar productos funcionando de manera incremental usando el empirismo

55.¿Qué es la metodología AGILE?

*se usa en el desarrollo de software y otros proyectos de alto rendimiento; se centra en la implementación rápida de un equipo eficiente y flexible para planear el flujo de trabajo. Agile brinda la capacidad de elegir la mejor opción en cada situación sin comprometer el proyecto.

56.¿Qué es TESTING?

*es una herramienta de feedback  nos permite detectar los errores en el proceso de desarrollo para poder solventarlos a tiempo. También podemos describirlo como el proceso de verificación y validación de una aplicación.

57.¿Qué son los patrones de diseño?

*Los patrones de diseño son soluciones para problemas típicos y recurrentes que nos podemos encontrar a la hora de desarrollar una aplicación.

Aunque nuestra aplicación sea única, tendrá partes comunes con otras aplicaciones: acceso a datos, creación de objetos, operaciones entre sistemas etc. En lugar de reinventar la rueda, podemos solucionar problemas utilizando algún patrón, ya que son soluciones probadas y documentadas por multitud de programadores.

58.¿Qué es el diseño UML?

*es una gráfica que permite visualizar un proyecto de desarrollo. Usualmente se trata de ‘planos’ sobre el funcionamiento y estructura de un software, simplificado para que sea comunicable y comprensible, entre los diferentes miembros del proyecto

59.¿Cuáles son los roles en el desarrollo de software?

*Administrador de proyecto
*analistas
*Programadores
*Diseñadores
*Tester
*Aseguradores de calidad
*Administrador de configuracion
*Documentador

60.¿Cuál es el camino que deseas seguir? ¿Desarrollador FrontEnd o
Desarrollador BackEnd?

*BackEnd









